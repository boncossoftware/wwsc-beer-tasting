rules_version = '2';

service cloud.firestore {
    match /databases/{database}/documents {

        function relatedToEventWithID(eventId) {
            return (
                (request.auth.token.email in get(/databases/$(database)/documents/events/$(eventId)).data.related)
                ||
                ownerOfEventWithID(eventId)
            ); 
        }

        function ownerOfEventWithID(eventId) {
            return (
                (request.auth.token.email == get(/databases/$(database)/documents/events/$(eventId)).data.owner)
            ); 
        }

        match /events/{eventId} {
            //Anybody can create an event.
            allow create: if true;
            //Related people can create an event.
            allow get,list: if (request.auth.token.email in resource.data.related);
            //Owners can edit or detele the event.
            allow update,delete: if (request.auth.token.email == resource.data.owner);
        }

        match /events/{eventId}/answers/{answerId} {
            //Each user can only edit their own answers.
            allow list: if ownerOfEventWithID(eventId);
            allow get: if request.auth.token.email == answerId;
            allow create,update: if (request.auth.token.email == answerId  || ownerOfEventWithID(eventId));
            allow delete: if ownerOfEventWithID(eventId);
        }

        match /results/{eventId} {
            //The results Id and event Id should be the same.
            allow get,list: if relatedToEventWithID(eventId);
            allow create,update: if false;
            allow delete: if ownerOfEventWithID(eventId);
        }

        match /users/{userId} {
            //All users can read each others info
            allow get: if true;
            //Each user can only edit their own user data.
            allow create,update: if request.auth.token.email == userId;
            allow delete: if false;
        }
    }
}