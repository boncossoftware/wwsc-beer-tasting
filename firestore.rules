rules_version = '2';

service cloud.firestore {
    match /databases/{database}/documents {

        function relatedToEventWithID(eventId) {
            return (
                (request.auth.token.email in get(/databases/$(database)/documents/events/$(eventId)).data.related)
                ||
                ownerOfEventWithID(eventId)
            ); 
        }

        function ownerOfEventWithID(eventId) {
            return (
                (request.auth.uid == get(/databases/$(database)/documents/events/$(eventId)).data.owner)
            ); 
        }

        function canEditEventWithID(eventId) {
            return (get(/databases/$(database)/documents/events/$(eventId)).data.editingAllowed == true); 
        }

        match /events/{eventId} {
            //Anybody can create an event.
            allow create: if true;
            //Related people can create an event.
            allow get,list: if (request.auth.token.email in resource.data.related);
            //Owners can edit or detele the event.
            allow update,delete: if (request.auth.uid == resource.data.owner);
        }

        match /events/{eventId}/answers/{answerId} {
            //Each user can only edit their own answers.
            allow list: if ownerOfEventWithID(eventId);
            allow get,create,update: if (
                (request.auth.uid == answerId)
                &&
                canEditEventWithID(eventId)
            );
            allow delete: if ownerOfEventWithID(eventId);
        }

        match /results/{eventId} {
            //The results Id and event Id should be the same.
            allow get,list: if relatedToEventWithID(eventId);
            allow create,update: if false;
            allow delete: if ownerOfEventWithID(eventId);
        }
    }
}